!function(e){"use strict";e.module("angularDaumMap",[])}(window.angular),function(e,n,t){"use strict";n.module("angularDaumMap").directive("daumMap",["$timeout","$log",function(e,a){return{restrict:"E",transclude:!0,replace:!1,template:'<div class="angular-daum-map" style="width:100%;height:100%"><div class="angular-daum-map-container" style="width:100%;height:100%"></div><div ng-transclude style="display:none"></div></div>',scope:{center:"=center",level:"=level",mapTypeId:"=mapTypeId",draggable:"=draggable",events:"=events"},link:function(i,r){var o,l,u,s;return u=!1,s=!1,n.isDefined(i.level)?n.isObject(i.center)?(l=n.element(r).find("div")[1],o=new t.maps.Map(l,{center:new t.maps.LatLng(i.center.latitude,i.center.longitude),level:i.level,mapTypeId:i.mapTypeId,draggable:i.draggable}),o.addControl(new t.maps.ZoomControl,t.maps.ControlPosition.RIGHT),t.maps.event.addListener(o,"dragstart",function(){u=!0,e(function(){i.$apply(function(e){null!==e.dragging&&(e.dragging=u)})})}),t.maps.event.addListener(o,"dragend",function(){u=!1,e(function(){i.$apply(function(e){null!==e.dragging&&(e.dragging=u)})})}),t.maps.event.addListener(o,"drag",function(){var n;n=o.getCenter(),e(function(){i.$apply(function(e){e.center.latitude=n.getLat(),e.center.longitude=n.getLng()})})}),t.maps.event.addListener(o,"zoom_changed",function(){i.zoom!==o.getLevel()&&e(function(){i.$apply(function(e){e.zoom=o.getLevel()})})}),t.maps.event.addListener(o,"center_changed",function(){var n;n=o.getCenter(),s||e(function(){i.$apply(function(e){u||(e.center.latitude=n.getLat(),e.center.longitude=n.getLng())})})}),n.isDefined(i.events)&&null!==i.events&&n.isArray(i.events)&&n.forEach(i.events,function(e){n.isFunction(e.handler)&&t.maps.event.addListener(o,e.name,function(){return e.handler.apply(i,[o,e.name,arguments])})}),i.$watch("center",function(e){if(!n.isObject(e))return void a.error("Invalid center for newValue: "+JSON.stringify(e));var r=new t.maps.LatLng(e.latitude,e.longitude);if(r.getLat()!==o.getCenter().getLat()||r.getLng()!==o.getCenter().getLng())return s=!0,u||(i.level===o.getLevel()?o.panTo(r):o.setCenter(r)),s=!1},!0),i.$watch("level",function(n){n!==o.getLevel()&&e(function(){o.setLevel(n)})}),void(i.map=o)):void a.error("angular-daum-maps: could not find a valid center property"):void a.error("angular-daum-maps: map level property not set")},controller:["$scope",function(e){n.extend(this,{getMap:function(){return e.map}})}]}}])}(window,window.angular,window.daum),function(e,n,t){"use strict";n.module("angularDaumMap").directive("daumMarkerLabel",["$timeout",function(e){return{restrict:"E",require:"^daumMarker",transclude:!0,replace:!0,template:'<div class="angular-daum-map-marker-label" ng-transclude></div>',link:function(a,i,r,o,l){var u,s,c,d=new t.maps.AbstractOverlay,p=o.getMarkerPosition();l(a,function(e){u=e}),d.onAdd=function(){s=n.element(d.getPanels().overlayLayer),s.append(u);var e=s.children();c=n.element(e[e.length-1])},d.onRemove=function(){c.remove()},d.draw=function(){var n=this.getProjection(),a=n.pointFromCoords(new t.maps.LatLng(p.latitude,p.longitude));c.css("whiteSpace","nowrap"),c.css("position","absolute");var i=c.width(),o=c.height();c.css("left",a.x-i/2+"px"),c.css("top",a.y+5+"px"),e(function(){i=c.width(),o=c.height(),c.css("left",a.x-i/2+"px"),c.css("top",a.y+5+"px"),"undefined"!=typeof r.zIndex&&c.css("z-index",r.zIndex)})},a.$watch(function(){return o.getMap()},function(e){d.setMap(e)}),a.$on("$destroy",function(){d.setMap(null)})}}}])}(window,window.angular,window.daum),function(e,n,t){"use strict";n.module("angularDaumMap").directive("daumMarker",function(){return{scope:{position:"=position",icon:"=icon",click:"&click",zIndex:"=zIndex",events:"=events"},restrict:"E",require:"^daumMap",transclude:!0,replace:!0,template:'<span class="angular-daum-map-marker" ng-transclude></span>',link:function(e,a,i,r){var o=new t.maps.Marker({position:new t.maps.LatLng(e.position.latitude,e.position.longitude),image:e.icon?new t.maps.MarkerImage(e.icon.image,new t.maps.Size(e.icon.width,e.icon.height)):null});e.$watch(function(){return r.getMap()},function(n){o.setMap(n),e.map=n}),e.$on("$destroy",function(){o.setMap(null)}),e.$watch("position",function(){o.setPosition(new t.maps.LatLng(e.position.latitude,e.position.longitude))}),e.$watch("icon",function(e){"undefined"!=typeof e&&null!==e&&o.setImage(new t.maps.MarkerImage(e.image,new t.maps.Size(e.width,e.height)))}),e.$watch("zIndex",function(){e.zIndex&&o.setZIndex(e.zIndex)}),n.isDefined(e.events)&&null!==e.events&&n.isArray(e.events)&&n.forEach(e.events,function(r){if(n.isFunction(r.handler)){var l={scope:e,element:a,attrs:i};t.maps.event.addListener(o,r.name,function(){return r.handler.apply(e,[l,r.name,arguments])})}})},controller:["$scope",function(e){n.extend(this,{getMarkerPosition:function(){return e.position},getMap:function(){return e.map}})}]}})}(window,window.angular,window.daum),function(e,n,t){"use strict";n.module("angularDaumMap").directive("daumPolyline",function(){return{scope:{path:"=",strokeWeight:"=",strokeColor:"=",strokeOpacity:"=",fillColor:"=",fillOpacity:"="},restrict:"E",require:"^daumMap",transclude:!1,replace:!0,template:'<span class="angular-daum-map-polyline"></span>',link:function(e,a,i,r){var o=[];n.forEach(e.path,function(e){o.push(new t.maps.LatLng(e.latitude,e.longitude))});var l=new t.maps.Polyline({path:o,strokeWeight:e.strokeWeight||4,strokeColor:e.strokeColor||"#FF0000",strokeOpacity:e.strokeOpacity||.5,fillColor:e.fillColor||"#FF0000",fillOpacity:e.fillOpacity||.5});e.$watch(function(){return r.getMap()},function(n){l.setMap(n),e.map=n}),e.$on("$destroy",function(){l.setMap(null)})},controller:["$scope",function(e){n.extend(this,{getMap:function(){return e.map}})}]}})}(window,window.angular,window.daum);